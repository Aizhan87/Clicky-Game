{"ast":null,"code":"import _objectSpread from \"/Users/Aizhan87/Desktop/clicky-game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Aizhan87/Desktop/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = id => {\n      // const randNum = Math.floor(Math.random() * this.state.friends.length)\n      // const randomImg = this.state.friends[randNum].id\n      // if (this.state.friends.id !== id) {\n      //   this.setState({ friends: randomImg });\n      // }\n      let correctGuess = false;\n      const newData = this.state.friends.map(friend => {\n        const newFriend = _objectSpread({}, friend);\n\n        if (newFriend.id === id) {\n          if (!newFriend.clicked) {\n            newFriend.clicked = true;\n            correctGuess = true;\n          }\n        }\n\n        return newFriend;\n      });\n      correctGuess ? this.handleCorrectGuess(newData) : this.handleIncorrectGuess(newData);\n    };\n\n    this.handleIncorrectGuess = data => {};\n\n    this.handleCorrectGuess = data => {\n      this.setState({\n        friends: this.resetFriends(data),\n        score: 0\n      });\n    };\n\n    this.shuffleData = data => {\n      let i = data.length - 1;\n\n      while (i > 0) {\n        const j = Math.floor(Math.random() * (i + 1))[(data[i], data[j])] = [data[j], data[i]];\n      }\n\n      return data;\n    };\n\n    this.resetFriends = data => {\n      const resetdata = data.map(friend => _objectSpread({}, friend, {\n        clicked: false\n      }));\n      return this.shuffleData(resetdata);\n    };\n\n    this.state = {\n      friends: friends,\n      score: 0,\n      topScore: 0\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Friends List\"), this.state.friends.map(friend => React.createElement(FriendCard, {\n      handleClick: this.handleClick,\n      id: friend.id,\n      key: friend.id,\n      image: friend.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Aizhan87/Desktop/clicky-game/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","App","constructor","handleClick","id","correctGuess","newData","state","map","friend","newFriend","clicked","handleCorrectGuess","handleIncorrectGuess","data","setState","resetFriends","score","shuffleData","i","length","j","Math","floor","random","resetdata","topScore","render","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      friends: friends,\n      score: 0,\n      topScore: 0\n    }\n\n  }\n\n\n  handleClick = id => {\n    // const randNum = Math.floor(Math.random() * this.state.friends.length)\n    // const randomImg = this.state.friends[randNum].id\n    // if (this.state.friends.id !== id) {\n    //   this.setState({ friends: randomImg });\n    // }\n    let correctGuess = false\n    const newData = this.state.friends.map(friend => {\n      const newFriend = { ...friend }\n      if (newFriend.id === id) {\n        if (!newFriend.clicked) {\n          newFriend.clicked = true\n          correctGuess = true\n        }\n      }\n      return newFriend\n    })\n    correctGuess ? this.handleCorrectGuess(newData) : this.handleIncorrectGuess(newData)\n  };\n\n  handleIncorrectGuess = data => {\n\n  }\n\n  handleCorrectGuess = data => {\n    this.setState({\n      friends: this.resetFriends(data),\n      score: 0\n    })\n  }\n\n  shuffleData = data => {\n    let i = data.length - 1\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1))\n      [data[i], data[j]] = [data[j], data[i]]\n    }\n    return data\n  }\n\n  resetFriends = data => {\n    const resetdata = data.map(friend => ({ ...friend, clicked: false }))\n    return this.shuffleData(resetdata)\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            handleClick={this.handleClick}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}