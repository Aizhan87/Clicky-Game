{"ast":null,"code":"import _objectSpread from \"/Users/Aizhan87/Desktop/clicky-game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Aizhan87/Desktop/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      friends: friends,\n      score: 0,\n      topScore: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(id) {\n    // const randNum = Math.floor(Math.random() * this.state.friends.length)\n    // const randomImg = this.state.friends[randNum].id\n    // if (this.state.friends.id !== id) {\n    //   this.setState({ friends: randomImg });\n    // }\n    let correctGuess = false;\n    const newData = this.state.friends.map(friend => {\n      const newFriend = _objectSpread({}, friend);\n\n      if (newFriend.id === id) {\n        if (!newFriend.clicked) {\n          newFriend.clicked = true;\n          correctGuess = true;\n        }\n      }\n\n      return newFriend;\n    });\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Friends List\"), this.state.friends.map(friend => React.createElement(FriendCard, {\n      handleClick: this.handleClick,\n      id: friend.id,\n      key: friend.id,\n      image: friend.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Aizhan87/Desktop/clicky-game/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","App","constructor","state","score","topScore","handleClick","bind","id","correctGuess","newData","map","friend","newFriend","clicked","render","image"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXH,MAAAA,OAAO,EAAEA,OADE;AAEXI,MAAAA,KAAK,EAAE,CAFI;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAGDD,EAAAA,WAAW,CAACE,EAAD,EAAK;AACd;AACA;AACA;AACA;AACA;AACA,QAAIC,YAAY,GAAG,KAAnB;AACA,UAAMC,OAAO,GAAG,KAAKP,KAAL,CAAWH,OAAX,CAAmBW,GAAnB,CAAuBC,MAAM,IAAI;AAC/C,YAAMC,SAAS,qBAAQD,MAAR,CAAf;;AACA,UAAIC,SAAS,CAACL,EAAV,KAAiBA,EAArB,EAAyB;AACvB,YAAI,CAACK,SAAS,CAACC,OAAf,EAAwB;AACtBD,UAAAA,SAAS,CAACC,OAAV,GAAoB,IAApB;AACAL,UAAAA,YAAY,GAAG,IAAf;AACD;AACF;;AACD,aAAOI,SAAP;AACD,KATe,CAAhB;AAWD;;AAED;AACAE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEG,KAAKZ,KAAL,CAAWH,OAAX,CAAmBW,GAAnB,CAAuBC,MAAM,IAC5B,oBAAC,UAAD;AACE,MAAA,WAAW,EAAE,KAAKN,WADpB;AAEE,MAAA,EAAE,EAAEM,MAAM,CAACJ,EAFb;AAGE,MAAA,GAAG,EAAEI,MAAM,CAACJ,EAHd;AAIE,MAAA,KAAK,EAAEI,MAAM,CAACI,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAaD;;AA/CyB;;AAkD5B,eAAef,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      friends: friends,\n      score: 0,\n      topScore: 0\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n\n  handleClick(id) {\n    // const randNum = Math.floor(Math.random() * this.state.friends.length)\n    // const randomImg = this.state.friends[randNum].id\n    // if (this.state.friends.id !== id) {\n    //   this.setState({ friends: randomImg });\n    // }\n    let correctGuess = false\n    const newData = this.state.friends.map(friend => {\n      const newFriend = { ...friend }\n      if (newFriend.id === id) {\n        if (!newFriend.clicked) {\n          newFriend.clicked = true\n          correctGuess = true\n        }\n      }\n      return newFriend\n    })\n\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            handleClick={this.handleClick}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}